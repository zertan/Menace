{% set name = "menace" %}
{% set version = "0.1.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

build:
  #skip: True # [osx]
  #number: 2
  #string: boost{{CONDA_BOOST}}_{{PKG_BUILDNUM}}

source:
  path: ../../
  #git_rev: {{ version }}
  #git_url: #https://github.com/zertan/Menace.git
  git_tag: notebook

build:
  # noarch_python: True
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - menace = menace:main
    #
    # Would create an entry point called menace that calls menace.main()

    - menace=menace.__main__:main
    - fetch_seq=menace.bin.fetchSeq:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy
    - scipy
    - pandas
    - biopython
    - matplotlib
    - xmltodict
    - configparser
    - lmfit
    #- newick
    - jinja2
    - docker-py
    - jupyter
    - seaborn
    - scikit-learn
    - pathoscope
    - bowtie2
    - samtools >1.0
    - bamtools
    - parallel

  run:
    - python
    - numpy
    - scipy
    - pandas
    - biopython
    - matplotlib
    - xmltodict
    - configparser
    - lmfit
    #- newick
    - jinja2
    - docker-py
    - jupyter
    - seaborn
    - scikit-learn
    - pathoscope
    - bowtie2
    - samtools >1.0
    - bamtools
    - parallel

test:
  # Python imports
  imports:
    - menace
    - menace.bin
    - menace.extra
    - menace.lib
    - menace.templates
    - menace.test

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - menace --help
    - fetch_seq --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://www.github.com/zertan/Menace/
  license: MIT License
  summary: 'A metagenomics pipeline to estimate relative cell periods.'
  license_family: MIT

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
